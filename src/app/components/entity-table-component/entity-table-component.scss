@use 'sass:map';
@use '../../../assets/variables' as *;

$colum-size: 100px;

.entity-table-container {
	height: 100%;
	border: 1px solid map.get($light-colors, border);
	border-radius: map.get($border, radius);
	gap: map.get($space, lg);
	padding: map.get($space, md);
}

.entity-table-container .header .table-title {
	font-size: larger;
	font-weight: 700;
}

.entity-table-container .table-header {
	display: grid;
	grid-template-columns: repeat(auto-fit, $colum-size);
}

.entity-table-container .body table {
	display: none;

	&.col-size-sm {
		width: auto;
	}

	&.col-size-md {
		width: auto;
	}

	&.col-size-lg {
		width: auto;
	}

	&.col-size-auto {
		max-width: 450px;
	}
}

.entity-table-container tr {
	position: relative;
}

.entity-table-container .entity-actions {
	position: static;
}

.entity-actions .entity-actions-container {
	position: relative;
}

.entity-actions .entity-actions-container i {
	cursor: pointer;
}

.entity-actions-container .actions-container {
	position: absolute;
	right: 0;
	top: 100%;
	width: 160px;
	background: map.get($light-colors, background);
	border: 1px solid map.get($light-colors, border);
	border-radius: map.get($border, radius);
	padding: map.get($space, sm) map.get($space, md);
	gap: map.get($space, sm);
	z-index: 1000;
}

.entity-actions-container .actions-container > div {
	gap: map.get($space, sm);
	cursor: pointer;

	&:hover {
		color: map.get($light-colors, primary);
	}
}

.entity-table-container .list-view .list-entry {
	padding: map.get($space, sm);
}

@media (min-width: map.get($device-size, md)) {
	.entity-table-container .body table {
		display: inline-table;
	}

	.entity-table-container .body .list-view {
		display: none;
	}
}
